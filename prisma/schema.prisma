// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  answers   Answer[]
  subscriptions Subscription[]
}

model Property {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  address     String
  postcode    String
  houseNumber String
  answers     Answer[]
  userId      String   @db.ObjectId

  @@unique([address, postcode, houseNumber])
}

model Question {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  answers     Answer[]
}

model Answer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  rating      Int
  createdAt   DateTime @default(now())
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  questionId  String   @db.ObjectId
  question    Question @relation(fields: [questionId], references: [id])
  propertyId  String   @db.ObjectId
  property    Property @relation(fields: [propertyId], references: [id])
}

model Subscription {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tier        Int
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  expiresAt   DateTime
}

